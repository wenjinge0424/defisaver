{
  "contractName": "StupidExchange",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "WETH_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CDAI_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PIP_INTERFACE_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "KYBER_ETH_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "OTC_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "IDAI_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GAS_TOKEN_INTERFACE_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "VOX_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ETH2DAI_WRAPPER",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "STUPID_EXCHANGE",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PROXY_REGISTRY_INTERFACE_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MKR_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FACTORY_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "LOGGER_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAKER_DAI_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "KYBER_WRAPPER",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "COMPOUND_DAI_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "UNISWAP_FACTORY",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PETH_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "KYBER_INTERFACE",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "WALLET_ID",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SOLO_MARGIN_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "UNISWAP_WRAPPER",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TUB_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getMakerDaiToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getCompoundDaiToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610d4f806100206000396000f3fe608060405234801561001057600080fd5b50600436106101ab576000357c0100000000000000000000000000000000000000000000000000000000900480638823151b116100fb578063c9fde270116100b4578063d36b907d1161008e578063d36b907d146107f0578063db8b0a581461083a578063ddaa293c14610868578063f0d405e5146108b2576101ab565b8063c9fde27014610712578063ce9bde1d1461075c578063d3661fa5146107a6576101ab565b80638823151b1461055657806394bfbe74146105a05780639da779e9146105ea578063b175afa114610634578063c16921b71461067e578063c74c0fac146106c8576101ab565b806332ac5cd211610168578063502237d711610142578063502237d71461044a57806369a9051414610494578063728c0092146104c2578063825ffd921461050c576101ab565b806332ac5cd21461036c57806336e6da11146103b657806343fb75e814610400576101ab565b8063040141e5146101b05780630531b2ad146101fa5780631dab52b01461024457806329f7fc9e1461028e5780632a441f05146102d85780632d5eeb3f14610322575b600080fd5b6101b86108fc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610202610914565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61024c61092c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610296610944565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102e061095c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61032a610974565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61037461098c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103be61099f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104086109b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104526109cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104c0600480360360208110156104aa57600080fd5b81019080803590602001909291905050506109e7565b005b6104ca610add565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610514610af5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61055e610b0d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105a8610b25565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105f2610b3d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61063c610b55565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610686610b6d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106d0610b85565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61071a610b9d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610764610bb5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107ae610bcd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107f8610be5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108666004803603602081101561085057600080fd5b8101908080359060200190929190505050610bfd565b005b610870610cf3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108ba610d0b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b73d0a1e359811322d97991e03f863a0c30c2cf029c81565b73b6b09fbffba6a5c4631e5f7b2e3ee183ac259c0d81565b73a944bd4b25c9f186a846fd5668941aa3d3b8425f81565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b734a6bc4e803c62081ffebcc8d227b5a87a58f1f8f81565b73a1e58f3b1927743393b25f261471e1f2d3d9f0f681565b6e170ccc93903185be5a2094c870df6281565b73bb4339c0ab5b1d9f14bd6e3426444a1e9d86a1d981565b73823cde416973a19f98bb9c96d97f4fe6c9a7238b81565b73863e41fe88288ebf3fcd91d8dbb679fb83fdfe1781565b7325a01a05c188dacbcf1d61af55d4a5b4021f7eed73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610a9e57600080fd5b505af1158015610ab2573d6000803e3d6000fd5b505050506040513d6020811015610ac857600080fd5b81019080805190602001909291905050505050565b7364a436ae831c1672ae81f674cab8b6775df3475c81565b73aaf64bfcc32d0f15873a02163e7e500671a4ffcd81565b73c72e74e474682680a414b506699bbca44ab9a93081565b7332d0e18f988f952eb3524ace762042381a2c39e581565b73c4375b7de8af5a38a93548eb8453a498222c4ff281565b735595930d576aedf13945c83ce5aad827529a131081565b7325a01a05c188dacbcf1d61af55d4a5b4021f7eed81565b73f5d915570bc477f9b8d6c0e980aa81757a3aac3681565b73f4d791139ce033ad35db2b2201435fad668b1b6481565b73692f391bcc85cefce8c237c01e1f636bbd70ea4d81565b7354b44c6b18fc0b4a1010b21d524c338d1f8065f681565b734ec3570cadaaee08ae384779b0f3a45ef85289de81565b73c4375b7de8af5a38a93548eb8453a498222c4ff273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610cb457600080fd5b505af1158015610cc8573d6000803e3d6000fd5b505050506040513d6020811015610cde57600080fd5b81019080805190602001909291905050505050565b735595930d576aedf13945c83ce5aad827529a131081565b73a71937147b55deb8a530c7229c442fd3f31b7db28156fea165627a7a7230582011ac0818de675cbafffc1b2e8f9b9046b2c42312fa5efe1335e3040f49af63320029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101ab576000357c0100000000000000000000000000000000000000000000000000000000900480638823151b116100fb578063c9fde270116100b4578063d36b907d1161008e578063d36b907d146107f0578063db8b0a581461083a578063ddaa293c14610868578063f0d405e5146108b2576101ab565b8063c9fde27014610712578063ce9bde1d1461075c578063d3661fa5146107a6576101ab565b80638823151b1461055657806394bfbe74146105a05780639da779e9146105ea578063b175afa114610634578063c16921b71461067e578063c74c0fac146106c8576101ab565b806332ac5cd211610168578063502237d711610142578063502237d71461044a57806369a9051414610494578063728c0092146104c2578063825ffd921461050c576101ab565b806332ac5cd21461036c57806336e6da11146103b657806343fb75e814610400576101ab565b8063040141e5146101b05780630531b2ad146101fa5780631dab52b01461024457806329f7fc9e1461028e5780632a441f05146102d85780632d5eeb3f14610322575b600080fd5b6101b86108fc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610202610914565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61024c61092c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610296610944565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102e061095c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61032a610974565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61037461098c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103be61099f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104086109b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104526109cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104c0600480360360208110156104aa57600080fd5b81019080803590602001909291905050506109e7565b005b6104ca610add565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610514610af5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61055e610b0d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105a8610b25565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105f2610b3d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61063c610b55565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610686610b6d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106d0610b85565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61071a610b9d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610764610bb5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107ae610bcd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107f8610be5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108666004803603602081101561085057600080fd5b8101908080359060200190929190505050610bfd565b005b610870610cf3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108ba610d0b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b73d0a1e359811322d97991e03f863a0c30c2cf029c81565b73b6b09fbffba6a5c4631e5f7b2e3ee183ac259c0d81565b73a944bd4b25c9f186a846fd5668941aa3d3b8425f81565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b734a6bc4e803c62081ffebcc8d227b5a87a58f1f8f81565b73a1e58f3b1927743393b25f261471e1f2d3d9f0f681565b6e170ccc93903185be5a2094c870df6281565b73bb4339c0ab5b1d9f14bd6e3426444a1e9d86a1d981565b73823cde416973a19f98bb9c96d97f4fe6c9a7238b81565b73863e41fe88288ebf3fcd91d8dbb679fb83fdfe1781565b7325a01a05c188dacbcf1d61af55d4a5b4021f7eed73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610a9e57600080fd5b505af1158015610ab2573d6000803e3d6000fd5b505050506040513d6020811015610ac857600080fd5b81019080805190602001909291905050505050565b7364a436ae831c1672ae81f674cab8b6775df3475c81565b73aaf64bfcc32d0f15873a02163e7e500671a4ffcd81565b73c72e74e474682680a414b506699bbca44ab9a93081565b7332d0e18f988f952eb3524ace762042381a2c39e581565b73c4375b7de8af5a38a93548eb8453a498222c4ff281565b735595930d576aedf13945c83ce5aad827529a131081565b7325a01a05c188dacbcf1d61af55d4a5b4021f7eed81565b73f5d915570bc477f9b8d6c0e980aa81757a3aac3681565b73f4d791139ce033ad35db2b2201435fad668b1b6481565b73692f391bcc85cefce8c237c01e1f636bbd70ea4d81565b7354b44c6b18fc0b4a1010b21d524c338d1f8065f681565b734ec3570cadaaee08ae384779b0f3a45ef85289de81565b73c4375b7de8af5a38a93548eb8453a498222c4ff273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610cb457600080fd5b505af1158015610cc8573d6000803e3d6000fd5b505050506040513d6020811015610cde57600080fd5b81019080805190602001909291905050505050565b735595930d576aedf13945c83ce5aad827529a131081565b73a71937147b55deb8a530c7229c442fd3f31b7db28156fea165627a7a7230582011ac0818de675cbafffc1b2e8f9b9046b2c42312fa5efe1335e3040f49af63320029",
  "sourceMap": "205:302:28:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;205:302:28;;;;;;;",
  "deployedSourceMap": "205:302:28:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;205:302:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;156:81:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1215;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1759:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;64:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;853:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1128:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1962:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;421:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1571:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1302;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;381:124:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;381:124:28;;;;;;;;;;;;;;;;;:::i;:::-;;1855:101:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;335:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1662:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;680:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;243:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1393:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;939:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2185:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;507:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2064:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;769:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1034:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;257:118:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;257:118:28;;;;;;;;;;;;;;;;;:::i;:::-;;1481:84:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;594:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;156:81;195:42;156:81;:::o;1215:::-;1254:42;1215:81;:::o;1759:90::-;1807:42;1759:90;:::o;64:86::-;108:42;64:86;:::o;853:80::-;891:42;853:80;:::o;1128:81::-;1167:42;1128:81;:::o;1962:96::-;2016:42;1962:96;:::o;421:80::-;459:42;421:80;:::o;1571:84::-;1613:42;1571:84;:::o;1302:::-;1344:42;1302:84;:::o;381:124:28:-;986:42:30;441:36:28;;;478:10;490:7;441:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;441:57:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;441:57:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;441:57:28;;;;;;;;;;;;;;;;;381:124;:::o;1855:101:30:-;1914:42;1855:101;:::o;335:80::-;373:42;335:80;:::o;1662:84::-;1704:42;1662:84;:::o;680:83::-;721:42;680:83;:::o;243:86::-;287:42;243:86;:::o;1393:82::-;1433:42;1393:82;:::o;939:89::-;986:42;939:89;:::o;2185:84::-;2227:42;2185:84;:::o;507:81::-;546:42;507:81;:::o;2064:84::-;2106:42;2064:84;:::o;769:78::-;805:42;769:78;:::o;1034:88::-;1080:42;1034:88;:::o;257:118:28:-;287:42:30;314:33:28;;;348:10;360:7;314:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;314:54:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;314:54:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;314:54:28;;;;;;;;;;;;;;;;;257:118;:::o;1481:84:30:-;1523:42;1481:84;:::o;594:80::-;632:42;594:80;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../interfaces/ERC20.sol\";\nimport \"../constants/ConstantAddresses.sol\";\n\n/// @title Used only on kovan as a helper because different Dai tokens are used in Maker | Compound\ncontract StupidExchange is ConstantAddresses {\n\n    function getMakerDaiToken(uint _amount) public {\n        ERC20(MAKER_DAI_ADDRESS).transfer(msg.sender, _amount);\n    }\n\n    function getCompoundDaiToken(uint _amount) public {\n        ERC20(COMPOUND_DAI_ADDRESS).transfer(msg.sender, _amount);\n    }\n}\n",
  "sourcePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver-contracts/contracts/compound/StupidExchange.sol",
  "ast": {
    "absolutePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver-contracts/contracts/compound/StupidExchange.sol",
    "exportedSymbols": {
      "StupidExchange": [
        6526
      ]
    },
    "id": 6527,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6491,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:28"
      },
      {
        "absolutePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver-contracts/contracts/interfaces/ERC20.sol",
        "file": "../interfaces/ERC20.sol",
        "id": 6492,
        "nodeType": "ImportDirective",
        "scope": 6527,
        "sourceUnit": 7284,
        "src": "25:33:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver-contracts/contracts/constants/ConstantAddresses.sol",
        "file": "../constants/ConstantAddresses.sol",
        "id": 6493,
        "nodeType": "ImportDirective",
        "scope": 6527,
        "sourceUnit": 6534,
        "src": "59:44:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6494,
              "name": "ConstantAddresses",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6533,
              "src": "232:17:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConstantAddresses_$6533",
                "typeString": "contract ConstantAddresses"
              }
            },
            "id": 6495,
            "nodeType": "InheritanceSpecifier",
            "src": "232:17:28"
          }
        ],
        "contractDependencies": [
          6533,
          6608
        ],
        "contractKind": "contract",
        "documentation": "@title Used only on kovan as a helper because different Dai tokens are used in Maker | Compound",
        "fullyImplemented": true,
        "id": 6526,
        "linearizedBaseContracts": [
          6526,
          6533,
          6608
        ],
        "name": "StupidExchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6509,
              "nodeType": "Block",
              "src": "304:71:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6504,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11220,
                          "src": "348:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "348:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6506,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6497,
                        "src": "360:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6501,
                            "name": "MAKER_DAI_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6544,
                            "src": "320:17:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6500,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7283,
                          "src": "314:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$7283_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 6502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "314:24:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7283",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 6503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7240,
                      "src": "314:33:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 6507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "314:54:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6508,
                  "nodeType": "ExpressionStatement",
                  "src": "314:54:28"
                }
              ]
            },
            "documentation": null,
            "id": 6510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMakerDaiToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6497,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 6510,
                  "src": "283:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6496,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "283:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "282:14:28"
            },
            "returnParameters": {
              "id": 6499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "304:0:28"
            },
            "scope": 6526,
            "src": "257:118:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6524,
              "nodeType": "Block",
              "src": "431:74:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6519,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11220,
                          "src": "478:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "478:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6521,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6512,
                        "src": "490:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6516,
                            "name": "COMPOUND_DAI_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6568,
                            "src": "447:20:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6515,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7283,
                          "src": "441:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$7283_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 6517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "441:27:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7283",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 6518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7240,
                      "src": "441:36:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 6522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "441:57:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6523,
                  "nodeType": "ExpressionStatement",
                  "src": "441:57:28"
                }
              ]
            },
            "documentation": null,
            "id": 6525,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompoundDaiToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6512,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 6525,
                  "src": "410:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6511,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "409:14:28"
            },
            "returnParameters": {
              "id": 6514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "431:0:28"
            },
            "scope": 6526,
            "src": "381:124:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 6527,
        "src": "205:302:28"
      }
    ],
    "src": "0:508:28"
  },
  "legacyAST": {
    "absolutePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver-contracts/contracts/compound/StupidExchange.sol",
    "exportedSymbols": {
      "StupidExchange": [
        6526
      ]
    },
    "id": 6527,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6491,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:28"
      },
      {
        "absolutePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver-contracts/contracts/interfaces/ERC20.sol",
        "file": "../interfaces/ERC20.sol",
        "id": 6492,
        "nodeType": "ImportDirective",
        "scope": 6527,
        "sourceUnit": 7284,
        "src": "25:33:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver-contracts/contracts/constants/ConstantAddresses.sol",
        "file": "../constants/ConstantAddresses.sol",
        "id": 6493,
        "nodeType": "ImportDirective",
        "scope": 6527,
        "sourceUnit": 6534,
        "src": "59:44:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6494,
              "name": "ConstantAddresses",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6533,
              "src": "232:17:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConstantAddresses_$6533",
                "typeString": "contract ConstantAddresses"
              }
            },
            "id": 6495,
            "nodeType": "InheritanceSpecifier",
            "src": "232:17:28"
          }
        ],
        "contractDependencies": [
          6533,
          6608
        ],
        "contractKind": "contract",
        "documentation": "@title Used only on kovan as a helper because different Dai tokens are used in Maker | Compound",
        "fullyImplemented": true,
        "id": 6526,
        "linearizedBaseContracts": [
          6526,
          6533,
          6608
        ],
        "name": "StupidExchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6509,
              "nodeType": "Block",
              "src": "304:71:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6504,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11220,
                          "src": "348:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "348:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6506,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6497,
                        "src": "360:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6501,
                            "name": "MAKER_DAI_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6544,
                            "src": "320:17:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6500,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7283,
                          "src": "314:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$7283_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 6502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "314:24:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7283",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 6503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7240,
                      "src": "314:33:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 6507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "314:54:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6508,
                  "nodeType": "ExpressionStatement",
                  "src": "314:54:28"
                }
              ]
            },
            "documentation": null,
            "id": 6510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMakerDaiToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6497,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 6510,
                  "src": "283:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6496,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "283:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "282:14:28"
            },
            "returnParameters": {
              "id": 6499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "304:0:28"
            },
            "scope": 6526,
            "src": "257:118:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6524,
              "nodeType": "Block",
              "src": "431:74:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6519,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11220,
                          "src": "478:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "478:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6521,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6512,
                        "src": "490:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6516,
                            "name": "COMPOUND_DAI_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6568,
                            "src": "447:20:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6515,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7283,
                          "src": "441:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$7283_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 6517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "441:27:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7283",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 6518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7240,
                      "src": "441:36:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 6522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "441:57:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6523,
                  "nodeType": "ExpressionStatement",
                  "src": "441:57:28"
                }
              ]
            },
            "documentation": null,
            "id": 6525,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompoundDaiToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6512,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 6525,
                  "src": "410:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6511,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "409:14:28"
            },
            "returnParameters": {
              "id": 6514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "431:0:28"
            },
            "scope": 6526,
            "src": "381:124:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 6527,
        "src": "205:302:28"
      }
    ],
    "src": "0:508:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-08-17T15:16:25.191Z",
  "devdoc": {
    "methods": {},
    "title": "Used only on kovan as a helper because different Dai tokens are used in Maker | Compound"
  },
  "userdoc": {
    "methods": {}
  }
}